m = [ 0.05; 0.1; 0.12; 0.18 ];
C = [ 0.0064 0.00408 0.00192 0; 
    0.00408 0.0289 0.0204 0.0119;
    0.00192 0.0204 0.0576 0.0336;
    0 0.0119 0.0336 0.1225 ];
m = m/12;
C = C/12;

AssetScenarios = mvnrnd(m, C, 20000);

p = PortfolioCVaR;
p = setScenarios(p, AssetScenarios);
p = setDefaultConstraints(p);
p = setProbabilityLevel(p, 0.95);

pwgt = estimateFrontier(p);

checkFeasibility(p, pwgt)

ans =

1     1     1     1     1     1     1     1     1     1

Next, set up a different portfolio problem that starts with the initial problem with an additional a
turnover constraint and an equally weighted initial portfolio:

q = setTurnover(p, 0.3, 0.25);
checkFeasibility(q, pwgt)

ans =

0     0     0     1     1     0     0     0     0     0

In this case, only two of the 10 efficient portfolios from the initial problem are feasible relative to the
new problem in PortfolioCVaR object q. Solving the second problem using checkFeasibility
demonstrates that the efficient portfolio for PortfolioCVaR object q is feasible relative to the initial
problem:

qwgt = estimateFrontier(q);
checkFeasibility(p, qwgt)

ans =

1     1     1     1     1     1     1     1     1     1

See Also
PortfolioCVaR | estimateBounds | checkFeasibility

Related Examples

•
“Creating the PortfolioCVaR Object” on page 5-22

•
“Working with CVaR Portfolio Constraints Using Defaults” on page 5-51

•
“Estimate Efficient Portfolios for Entire Frontier for PortfolioCVaR Object” on page 5-85

•
“Estimate Efficient Frontiers for PortfolioCVaR Object” on page 5-105

•
“Asset Returns and Scenarios Using PortfolioCVaR Object” on page 5-36

Validate the CVaR Portfolio Problem

5-83