[pwgt, pbuy, psell] = estimateFrontierByRisk(p,[0.0324241, 0.0694534 ])

pwgt = 3×2

0.0000    0.5000
    0.6907    0.0000
    0.3093    0.5000

pbuy = 3×2

0.0000    0.5000
    0.6907    0.0000
    0.3093    0.5000

psell = 3×2

0     0
     0     0
     0     0

The estimateFrontierByRisk function uses the MINLP solver to solve this problem. Use the
setSolverMINLP function to configure the SolverType and options.

p.solverTypeMINLP

ans = 
'OuterApproximation'

p.solverOptionsMINLP

ans = struct with fields:
                           MaxIterations: 1000
                    AbsoluteGapTolerance: 1.0000e-07
                    RelativeGapTolerance: 1.0000e-05
                  NonlinearScalingFactor: 1000
                  ObjectiveScalingFactor: 1000
                                 Display: 'off'
                           CutGeneration: 'basic'
                MaxIterationsInactiveCut: 30
                      ActiveCutTolerance: 1.0000e-07
                    IntMainSolverOptions: [1×1 optim.options.Intlinprog]
    NumIterationsEarlyIntegerConvergence: 30
                     ExtendedFormulation: 0
                            NumInnerCuts: 10
                     NumInitialOuterCuts: 10

Obtain Portfolios with Targeted Portfolio Risks for a Portfolio Object Using the Direct
Method and Solver Options

To obtain efficient portfolios that have targeted portfolio risks, the estimateFrontierByRisk
function accepts one or more target portfolio risks and obtains efficient portfolios with the specified
risks. Assume you have a universe of four assets where you want to obtain efficient portfolios with

15
Functions

15-974