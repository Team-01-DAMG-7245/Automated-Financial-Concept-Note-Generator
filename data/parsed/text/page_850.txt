p = PortfolioMAD;
A = [ 1 1 1 0 0 ];    % first inequality constraint
b = 0.5;
p = setInequality(p, A, b);

A = [ 0 0 -1 -1 -1 ];    % second inequality constraint
b = -0.5;
p = addInequality(p, A, b);

disp(p.NumAssets)
disp(p.AInequality)
disp(p.bInequality)

5

1     1     1     0     0
0     0    -1    -1    -1

0.5000
-0.5000

The PortfolioMAD object, setInequality, and addInequality implement scalar expansion on
the bInequality property based on the dimension of the matrix in the AInequality property.

See Also
PortfolioMAD | setDefaultConstraints | setBounds | setBudget | setConditionalBudget
| setGroups | setGroupRatio | setEquality | setInequality | setTurnover |
setOneWayTurnover

Related Examples

•
“Setting Default Constraints for Portfolio Weights Using PortfolioMAD Object” on page 6-50

•
“Creating the PortfolioMAD Object” on page 6-22

•
“Validate the MAD Portfolio Problem” on page 6-80

•
“Estimate Efficient Portfolios Along the Entire Frontier for PortfolioMAD Object” on page 6-84

•
“Estimate Efficient Frontiers for PortfolioMAD Object” on page 6-105

•
“Asset Returns and Scenarios Using PortfolioMAD Object” on page 6-35

More About

•
“PortfolioMAD Object” on page 6-17

•
“Portfolio Optimization Theory” on page 6-3

•
“PortfolioMAD Object Workflow” on page 6-16

6
MAD Portfolio Optimization Tools

6-70