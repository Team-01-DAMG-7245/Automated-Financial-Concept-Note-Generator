b = 0.5;
p = setEquality(p, A, b);

A = [ 0 0 1 1 1 ];    % second equality constraint
b = 0.5;
p = addEquality(p, A, b);

disp(p.NumAssets)
disp(p.AEquality)
disp(p.bEquality)

5

1     1     1     0     0
0     0     1     1     1

0.5000
0.5000

The PortfolioCVaR object, setEquality, and addEquality implement scalar expansion on the
bEquality property based on the dimension of the matrix in the AEquality property.

See Also
PortfolioCVaR | setDefaultConstraints | setBounds | setBudget |
setConditionalBudget | setGroups | setGroupRatio | setEquality | setInequality |
setTurnover | setOneWayTurnover

Related Examples

•
“Creating the PortfolioCVaR Object” on page 5-22

•
“Working with CVaR Portfolio Constraints Using Defaults” on page 5-51

•
“Validate the CVaR Portfolio Problem” on page 5-81

•
“Estimate Efficient Portfolios for Entire Frontier for PortfolioCVaR Object” on page 5-85

•
“Estimate Efficient Frontiers for PortfolioCVaR Object” on page 5-105

•
“Asset Returns and Scenarios Using PortfolioCVaR Object” on page 5-36

•
“Hedging Using CVaR Portfolio Optimization” on page 5-125

•
“Compute Maximum Reward-to-Risk Ratio for CVaR Portfolio” on page 5-137

More About

•
“PortfolioCVaR Object” on page 5-17

•
“Portfolio Optimization Theory” on page 5-3

•
“PortfolioCVaR Object Workflow” on page 5-16

External Websites

•
Getting Started with Portfolio Optimization (4 min 13 sec)

•
CVaR Portfolio Optimization (4 min 56 sec)

Working with Linear Equality Constraints Using PortfolioCVaR Object

5-69