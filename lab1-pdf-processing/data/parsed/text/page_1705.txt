Positive time increments between observations, specified as the comma-separated pair consisting of
'DeltaTime' and a scalar or a NPeriods-by-1 column vector.

DeltaTime represents the familiar dt found in stochastic differential equations, and determines the
times at which the simulated paths of the output state variables are reported.

Data Types: double

NSteps — Number of intermediate time steps
1 (indicating no intermediate evaluation) (default) | positive integer

Number of intermediate time steps within each time increment dt (defined as DeltaTime), specified
as the comma-separated pair consisting of 'NSteps' and a positive scalar integer.

The simByTransition function partitions each time increment dt into NSteps subintervals of
length dt/NSteps, and refines the simulation by evaluating the simulated state vector at NSteps − 1
intermediate points. Although simByTransition does not report the output state vector at these
intermediate points, the refinement improves accuracy by enabling the simulation to more closely
approximate the underlying continuous-time process.

Data Types: double

StorePaths — Flag for storage and return method
True (default) | logical with values True or False

Flag for storage and return method that indicates how the output array Paths is stored and
returned, specified as the comma-separated pair consisting of 'StorePaths' and a scalar logical
flag with a value of True or False.

•
If StorePaths is True (the default value) or is unspecified, then simByTransition returns
Paths as a three-dimensional time series array.

•
If StorePaths is False (logical 0), then simByTransition returns the Paths output array as
an empty matrix.

Data Types: logical

MonteCarloMethod — Monte Carlo method to simulate stochastic processes
"standard" (default) | string with values "standard", "quasi", or "randomized-quasi" |
character vector with values 'standard', 'quasi', or 'randomized-quasi'

Monte Carlo method to simulate stochastic processes, specified as the comma-separated pair
consisting of 'MonteCarloMethod' and a string or character vector with one of the following
values:

•
"standard" — Monte Carlo using pseudo random numbers that has a convergence rate of O(N-

½).

•
"quasi" — Quasi-Monte Carlo rate of convergence is faster than standard Monte Carlo with
errors approaching size of O(N-1).

•
"randomized-quasi" — Quasi-random sequences, also called low-discrepancy sequences, are
deterministic uniformly distributed sequences which are specifically designed to place sample
points as uniformly as possible.

Data Types: string | char

simByTransition

15-399