Output Arguments

Paths — Three-dimensional time series array, consisting of simulated paths of correlated
state variables
array

Three-dimensional time series array, consisting of simulated paths of correlated state variables,
returned as an (NPeriods + 1)-by-NVars-by-NTrials array.

For a given trial, each row of Paths is the transpose of the state vector Xt at time t.

Times — Observation times associated with the simulated paths
column vector

Observation times associated with the simulated paths, returned as an (NPeriods + 1)-by-1
column vector.

Z — Three-dimensional time series array of dependent random variates used to generate
the Brownian motion vector (Wiener processes)
array | matrix | table | timetable

Three-dimensional time series array of dependent random variates used to generate the Brownian
motion vector (Wiener processes) that drove the simulated results found in Paths, returned as an
NTimes-by-NBrowns-by-NTrials array.

NTimes is the number of time steps at which the simulate function samples the state vector.
NTimes includes intermediate times designed to improve accuracy, which simulate does not
necessarily report in the Paths output time series.

More About

Antithetic Sampling

Simulation methods allow you to specify a popular variance reduction technique called antithetic
sampling.

This technique attempts to replace one sequence of random observations with another of the same
expected value, but smaller variance. In a typical Monte Carlo simulation, each sample path is
independent and represents an independent trial. However, antithetic sampling generates sample
paths in pairs. The first path of the pair is referred to as the primary path, and the second as the
antithetic path. Any given pair is independent of any other pair, but the two paths within each pair
are highly correlated. Antithetic sampling literature often recommends averaging the discounted
payoffs of each pair, effectively halving the number of Monte Carlo trials.

This technique attempts to reduce variance by inducing negative dependence between paired input
samples, ideally resulting in negative dependence between paired output samples. The greater the
extent of negative dependence, the more effective antithetic sampling is.

Algorithms

This function simulates any vector-valued SDE of the form:

dXt = F(t, Xt)dt + G(t, Xt)dWt
 (15-4)

15
Functions

15-410