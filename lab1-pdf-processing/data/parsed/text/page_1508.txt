merton

Merton jump diffusion model

Description

Creates and displays a merton object, which derives from the gbm object.

The merton model, based on the Merton76 model, allows you to simulate sample paths of NVars
state variables driven by NBrowns Brownian motion sources of risk and NJumps compound Poisson
processes representing the arrivals of important events over NPeriods consecutive observation
periods. The simulation approximates continuous-time merton stochastic processes.

You can simulate any vector-valued merton process of the form

dXt = B(t, Xt)Xtdt + D(t, Xt)V(t, xt)dWt + Y(t, Xt, Nt)XtdNt

Here:

•
Xt is an NVars-by-1 state vector of process variables.

•
B(t,Xt) is an NVars-by-NVars matrix of generalized expected instantaneous rates of return.

•
D(t,Xt) is an NVars-by-NVars diagonal matrix in which each element along the main diagonal is
the corresponding element of the state vector.

•
V(t,Xt) is an NVars-by-NVars matrix of instantaneous volatility rates.

•
dWt is an NBrowns-by-1 Brownian motion vector.

•
Y(t,Xt,Nt) is an NVars-by-NJumps matrix-valued jump size function.

•
dNt is an NJumps-by-1 counting process vector.

Creation

Syntax

Merton = merton(Return,Sigma,JumpFreq,JumpMean,JumpVol)
Merton = merton( ___ ,Name,Value)

Description

Merton = merton(Return,Sigma,JumpFreq,JumpMean,JumpVol) creates a default merton
object. Specify the required inputs as one of two types:

•
MATLAB array. Specify an array to indicate a static (non-time-varying) parametric specification.
This array fully captures all implementation details, which are clearly associated with a
parametric form.

•
MATLAB function. Specify a function to provide indirect support for virtually any static, dynamic,
linear, or nonlinear model. This parameter is supported by an interface because all
implementation details are hidden and fully encapsulated by the function.

15
Functions

15-202