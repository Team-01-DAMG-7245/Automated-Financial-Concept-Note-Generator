Data Types: string | char

BrownianMotionMethod — Brownian motion construction method
"standard" (default) | string with value "brownian-bridge" or "principal-components" |
character vector with value 'brownian-bridge' or 'principal-components'

Brownian motion construction method, specified as the comma-separated pair consisting of
'BrownianMotionMethod' and a string or character vector with one of the following values:

•
"standard" — The Brownian motion path is found by taking the cumulative sum of the Gaussian
variates.

•
"brownian-bridge" — The last step of the Brownian motion path is calculated first, followed by
any order between steps until all steps have been determined.

•
"principal-components" — The Brownian motion path is calculated by minimizing the
approximation error.

Note If an input noise process is specified using the Z input argument, BrownianMotionMethod is
ignored.

The starting point for a Monte Carlo simulation is the construction of a Brownian motion sample path
(or Wiener path). Such paths are built from a set of independent Gaussian variates, using either
standard discretization, Brownian-bridge construction, or principal components construction.

Both standard discretization and Brownian-bridge construction share the same variance and,
therefore, the same resulting convergence when used with the MonteCarloMethod using pseudo
random numbers. However, the performance differs between the two when the MonteCarloMethod
option "quasi" is introduced, with faster convergence for the "brownian-bridge" construction
option and the fastest convergence for the "principal-components" construction option.

Data Types: string | char

Processes — Sequence of end-of-period processes or state vector adjustments
simByEuler makes no adjustments and performs no processing (default) | function | cell array of
functions

Sequence of end-of-period processes or state vector adjustments of the form, specified as the comma-
separated pair consisting of 'Processes' and a function or cell array of functions of the form

Xt = P(t, Xt)

The simByEuler function runs processing functions at each interpolation time. They must accept the
current interpolation time t, and the current state vector Xt, and return a state vector that may be an
adjustment to the input state.

If you specify more than one processing function, simByEuler invokes the functions in the order in
which they appear in the cell array. You can use this argument to specify boundary conditions,
prevent negative prices, accumulate statistics, and plot graphs.

Data Types: cell | function

simByEuler

15-391