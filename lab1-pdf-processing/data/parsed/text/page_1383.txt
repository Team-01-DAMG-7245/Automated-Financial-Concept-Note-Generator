functions are the calculation engines for the drift and diffusion objects, and are the only
parameters required for simulation.

Note You can express drift and diffusion classes in the most general form to emphasize the
functional (t, Xt) interface. However, you can specify the components A and B as functions that adhere
to the common (t, Xt) interface, or as MATLAB arrays of appropriate dimension.

Example: G = diffusion(1, 0.3) % Diffusion rate function G(t,X)

Data Types: struct | double

Object Functions
interpolate
Brownian interpolation of stochastic differential equations (SDEs) for SDE, BM,
GBM, CEV, CIR, HWV, Heston, SDEDDO, SDELD, or SDEMRD models
simulate
Simulate multivariate stochastic differential equations (SDEs) for SDE, BM, GBM,
CEV, CIR, HWV, Heston, SDEDDO, SDELD, SDEMRD, Merton, or Bates models
simByEuler
Euler simulation of stochastic differential equations (SDEs) for SDE, BM, GBM,
CEV, CIR, HWV, Heston, SDEDDO, SDELD, or SDEMRD models
simByMilstein
Simulate diagonal diffusion for BM, GBM, CEV, HWV, SDEDDO, SDELD, or
SDEMRD sample paths by Milstein approximation
simByMilstein2
Simulate BM, GBM, CEV, HWV, SDEDDO, SDELD, SDEMRD process sample paths
by second order Milstein approximation

Examples

Create a cev Object

Create a univariate cev object to represent the model: dXt = 0 . 25Xt + 0 . 3Xt

1
2dWt.

obj = cev(0.25, 0.5, 0.3) % (B = Return, Alpha, Sigma)

obj = 
   Class CEV: Constant Elasticity of Variance
   ------------------------------------------
     Dimensions: State = 1, Brownian = 1
   ------------------------------------------
      StartTime: 0
     StartState: 1
    Correlation: 1
          Drift: drift rate function F(t,X(t)) 
      Diffusion: diffusion rate function G(t,X(t)) 
     Simulation: simulation method/function simByEuler
         Return: 0.25
          Alpha: 0.5
          Sigma: 0.3

cev objects display the parameter B as the more familiar Return

cev

15-77