This way works because the calls to the are in this particular order. In this case, the call to initialize
AssetScenarios provides the dimensions for the problem. If you were to do this step last, you
would have to explicitly dimension the LowerBound property as follows:

m = [ 0.05; 0.1; 0.12; 0.18 ];
C = [ 0.0064 0.00408 0.00192 0;
0.00408 0.0289 0.0204 0.0119;
0.00192 0.0204 0.0576 0.0336;
0 0.0119 0.0336 0.1225 ];

m = m/12;
C = C/12;

AssetScenarios = mvnrnd(m, C, 20000);

p = PortfolioCVaR;
p = PortfolioCVaR(p, 'LowerBound', zeros(size(m)));
p = PortfolioCVaR(p, 'LowerBudget', 1, 'UpperBudget', 1);
p = setProbabilityLevel(p, 0.95);
p = setScenarios(p, AssetScenarios);

Note If you did not specify the size of LowerBound but, instead, input a scalar argument, the
PortfolioCVaR object assumes that you are defining a single-asset problem and produces an error
at the call to set asset scenarios with four assets.

Shortcuts for Property Names

The PortfolioCVaR object has shorter argument names that replace longer argument names
associated with specific properties of the PortfolioCVaR object. For example, rather than enter
'ProbabilityLevel', the PortfolioCVaR object accepts the case-insensitive name 'plevel' to
set the ProbabilityLevel property in a PortfolioCVaR object. Every shorter argument name

5
CVaR Portfolio Optimization Tools

5-26